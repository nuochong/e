(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{2235:function(t,v,a){"use strict";a.r(v);var e=a(3),_=Object(e.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("随着 H5 标准的发布以及推广，使得移动应用的开发也受到了很大影响，出于效率、成本等原因，移动应用的开发不再完全依赖于 “原生”。近日越发火热的混合应用（Hybrid App）介于 Web 应用和原生应用之间，兼具了 “原生应用良好用户交互体验” 和 “Web 应用跨平台开发”的两大优势。而 Facebook 开源的 React Native 跨平台移动应用开发框架，使开发者只使用 JavaScript 就能编写原生移动应用。那么问题来了，如果你想构建属于你自己的 App，那么究竟要怎么选型呢？是选择 React Native 还是原生应用开发？")])]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("因为我们的主要客户都是非技术背景。他们总是向我们咨询许多框架、语言和平台之间的区别，比如：")]),t._v(" "),a("ul",[a("li",[t._v("React Native 与 Swift")]),t._v(" "),a("li",[t._v("Swift 与 React Native")]),t._v(" "),a("li",[t._v("React Native 与 Android")])]),t._v(" "),a("p",[t._v("由此我们了解到，还有一些不懂技术的人想要构建一款 App，但他们感到很困惑。 因为他们不了解这些技术术语、平台或语言。")]),t._v(" "),a("p",[t._v("因此，我们决定写一篇博文，来解释为什么当你寻找混合模式（Hybrid）应用和原生（Native）应用开发时，理解 React Native 和原生 App 的区别更为重要。")]),t._v(" "),a("h2",{attrs:{id:"react-native-与原生应用的开发历程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-native-与原生应用的开发历程"}},[t._v("#")]),t._v(" React Native 与原生应用的开发历程")]),t._v(" "),a("p",[t._v("当谈到 开发移动应用 时，只有两种方式可供企业选择。")]),t._v(" "),a("p",[t._v("要么他们可以选择原生应用开发，要么他们可以选择在跨平台开发中构建自己的应用。")]),t._v(" "),a("p",[t._v("你可能会问跨平台应用和原生应用在开发之间有什么不同？")]),t._v(" "),a("p",[t._v("是这样的，跨平台应用允许开发人员编写一次代码，就可以在所有平台上运行，但原生应用需要单独编码（即 iOS 平台的 Swift 或 Object-C，Android 的 平台 Java 或 Kotlin）。")]),t._v(" "),a("p",[t._v("因此，原生应用开发需要更多的时间、资金和资源来构建应用程序。")]),t._v(" "),a("p",[t._v("但这并不意味着它是指示你选择跨平台开发应用的绿色信号灯。这两者各有利弊。")]),t._v(" "),a("p",[t._v("在本文中，我们将讨论 React Native 与原生应用哪个更好一些。")]),t._v(" "),a("h2",{attrs:{id:"原生移动应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生移动应用"}},[t._v("#")]),t._v(" 原生移动应用")]),t._v(" "),a("p",[t._v("让我们先从教科书上对原生应用（Native App）的定义开始。原生应用是为特定平台构建的，可在特定的设备和操作系统上运行。正如我之前所解释的，这些特定的平台可以是 Android 或 iOS。这些应用程序能够利用特定设备及其操作系统可用的所有硬件和软件功能。例如，如果我们使用 Apple 的 iOS 应用程序，他们是用 Object-C 或 Swift 编写的。因此，这些 iOS 应用程序不适用于 Android 或 Windows 平台，反之亦然。")]),t._v(" "),a("p",[t._v("原生应用的优势在于，能够使用操作系统提供的功能以及安装在特定平台上的软件。")]),t._v(" "),a("p",[t._v("原生应用开发需要使用编程语言和 集成开发环境（IDE）工具。例如，Xcode 工具在 iOS 中使用的是 Object-C 语言，而 Android Studio 在 Android 中使用的是 Java 和 Kotlin 语言。")]),t._v(" "),a("h2",{attrs:{id:"原生平台上开发应用程序的利与弊"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生平台上开发应用程序的利与弊"}},[t._v("#")]),t._v(" 原生平台上开发应用程序的利与弊")]),t._v(" "),a("h3",{attrs:{id:"原生应用开发的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生应用开发的优点"}},[t._v("#")]),t._v(" 原生应用开发的优点")]),t._v(" "),a("ul",[a("li",[t._v("内置组件，如摄像头、麦克风、指南针、加速度计等，可无缝工作。这是因为原生应用是与设备的这些组件一起构建的。")]),t._v(" "),a("li",[t._v("编写文档对于原生应用来讲很容易，因为仅 iOS 和 Android 本身就至少有 2500 本书。此外，互联网上还有数以百计的文章和博文。")]),t._v(" "),a("li",[t._v("原生应用有着快速响应的体验，因为它们的功能是根据特定平台构建的。")]),t._v(" "),a("li",[t._v("由于在构建 App 时须遵循相应 App store 的指导原则，因此可以保持安全性。")]),t._v(" "),a("li",[t._v("用户界面 / 用户体验对于每个平台都是独一无二的。因此，根据平台的特定用户界面 / 用户体验构建 App，将能够为用户提供更加个性化的体验。")]),t._v(" "),a("li",[t._v("App store 支持原生应用开发，因为这样做等于是助长它们的市场。因此，你将从各自的 App store 获得更多的支持，让用户更容易访问你的 App。")]),t._v(" "),a("li",[t._v("在原生应用开发中，可以充分利用 API 访问，而无需在功能上寻找任何额外的映射。这就降低了 App 对更新的依赖程度。")]),t._v(" "),a("li",[t._v("如果你使用原生应用开发，来自其他开发社区的第三方库是你获得的额外好处。")]),t._v(" "),a("li",[t._v("更严格的语言：Android 和 iOS 的所有本机语言都被认为是严格的语言，学习其他语言很容易。")])]),t._v(" "),a("p",[t._v("请记住，不管适应一门语言需要花费多长时间，你都要完全适应自己所选择的本机语言。")]),t._v(" "),a("h3",{attrs:{id:"原生应用开发的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生应用开发的缺点"}},[t._v("#")]),t._v(" 原生应用开发的缺点")]),t._v(" "),a("ul",[a("li",[t._v("必须使用不同的代码库在不同平台上构建 App。为 Android 平台构建的 App 无法在 iOS 平台上运行，反之亦然。因此，你必须使用不同的代码库和特定的平台团队。")]),t._v(" "),a("li",[t._v("比混合应用（Hybrid App）开发更耗时，因为任何一次完成的工作都只适用于这个单独的平台。因此，你需要一个全新的团队，为另一个平台采取不同的方法，从头开始。")]),t._v(" "),a("li",[t._v("成本上升，因为基本上，你要为两个不同的平台（Android 和 iOS）构建两个不同的 App。因此，要获得这两个平台，你需要支付几乎两倍的开发成本（如果不是更多的话）。")])]),t._v(" "),a("h2",{attrs:{id:"react-native"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-native"}},[t._v("#")]),t._v(" React Native")]),t._v(" "),a("p",[t._v("React Native 是由 Jordan Walke 在 Facebook 举办的黑客马拉松项目中开发的。它起源于 React.JS，最初是为了解决 Facebook 的跨平台应用程序相关的特定问题而构建的。因此，这个应用与其他“移动网络应用”不同，它是一款真正的移动应用，使用 JavaScript 开发的，不影响任何质量。")]),t._v(" "),a("h3",{attrs:{id:"react-native-应用开发的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-native-应用开发的优点"}},[t._v("#")]),t._v(" React Native 应用开发的优点")]),t._v(" "),a("ul",[a("li",[t._v("让我们来看看 React Native 应用的好处。")]),t._v(" "),a("li",[t._v("开源提供了对代码的更多理解，并通过其他功能改进了框架。")]),t._v(" "),a("li",[t._v("一次编写，随处运行，可以在多个平台上运行的代码类型。因此，你只需构建一次多平台 App 即可。")]),t._v(" "),a("li",[t._v("热更新有助于持续运行应用，同时将最新代码部署到应用中进行更新。")]),t._v(" "),a("li",[t._v("与原生应用开发相比，React Native 可以缩短上市时间，因为只需构建一个应用而不是至少两个。")]),t._v(" "),a("li",[t._v("对于 React Native 来说，扩展是件很自然的事。它完全有能力处理一个 App 越来越多的工作，并可轻松地处理更新到更高级别的功能。")]),t._v(" "),a("li",[t._v("降低应用开发的时间消耗。因为相同的代码可以用来构建面向不同平台的应用。")]),t._v(" "),a("li",[t._v("确保节约成本。由于同样的代码用于 iOS 和 Android，使得应用开发成本是原生应用开发的一半。")]),t._v(" "),a("li",[t._v("高质量的移动应用是一种保证，因为 React Native 专注于图形处理单元（GPU），这点与原生应用不同。")]),t._v(" "),a("li",[t._v("中央处理器（CPU）。CPU 有助于 React Native 在内存类别中提供更好的性能。")]),t._v(" "),a("li",[t._v("Web 到移动开发：对于一个 Web 开发人员来说，从 Web 到移动开发是很困难的，但 React Native 有助于这一过渡，因为它本质上将是一个 JavaScript 框架。")])]),t._v(" "),a("h3",{attrs:{id:"react-native-应用开发的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-native-应用开发的缺点"}},[t._v("#")]),t._v(" React Native 应用开发的缺点")]),t._v(" "),a("ul",[a("li",[t._v("获取不同 App store 的许可证难度更大。与原生应用相比，这些 App store 提供了更多的支持。")]),t._v(" "),a("li",[t._v("目前，React Native 普遍缺少一些自定义模块。大多数公共库存在于 React Native 中，但根据你的相应项目，也可能存在例外情况。在这种情况下，你需要为此类模块找到或构建自己的解决方案。")]),t._v(" "),a("li",[t._v("原生应用开发人员需要更多指定给原生应用构建的模块，如访问摄像头、推送通知和其他设备传感器。")]),t._v(" "),a("li",[t._v("与原生应用相比，社区支持较少。此外，所需资源也比原生开发更少。")])]),t._v(" "),a("h2",{attrs:{id:"何时选择原生应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时选择原生应用"}},[t._v("#")]),t._v(" 何时选择原生应用")]),t._v(" "),a("p",[t._v("当你遇到以下情景时，你应该尝试这种原生应用开发：")]),t._v(" "),a("ul",[a("li",[t._v("不想担心 API 和语言的变更。")]),t._v(" "),a("li",[t._v("想要原生应用的用户体验。")]),t._v(" "),a("li",[t._v("需要创建基于物联网的应用程序。")]),t._v(" "),a("li",[t._v("想要在任何平台（Android 或 iOS）上构建 App。")]),t._v(" "),a("li",[t._v("正在寻找频繁的更新。")])]),t._v(" "),a("h2",{attrs:{id:"何时选择-react-native"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时选择-react-native"}},[t._v("#")]),t._v(" 何时选择 React Native")]),t._v(" "),a("ul",[a("li",[t._v("你想构建一款电子商务 App。")]),t._v(" "),a("li",[t._v("构建像 Instagram 和 Facebook 这样的社交媒体 App。")]),t._v(" "),a("li",[t._v("你需要尽快进入市场。")]),t._v(" "),a("li",[t._v("你的项目预算较少。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("总而言之，这要取决于你的规模和项目的紧迫性。如果你想尽早使用移动应用，那么 React Native 是最佳选择。")]),t._v(" "),a("p",[t._v("然而，如果你预算充裕，而且也不想在 App 的用户界面和功能上妥协，那么，原生应用应该就是你的选择。")]),t._v(" "),a("p",[t._v("英文原文：\n"),a("a",{attrs:{href:"https://www.excellentwebworld.com/react-native-vs-native",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.excellentwebworld.com/react-native-vs-native"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/J-6EKH4fOroPS8RMsC9CJg",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何正确选型，React Native 还是 Native？"),a("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=_.exports}}]);