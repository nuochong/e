(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{2382:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"安装步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[t._v("#")]),t._v(" 安装步骤：")]),t._v(" "),n("p",[t._v("前提：Node.js 安装 Canvas 之前，需要首先安装 node-gyp。\n而想要安装 node-gyp，需要首先安装 windows-build-tools。\n执行命令：")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --global --production windows-build-tools\n")])])]),n("p",[t._v("执行命令后，会自动安装 Visual C++ Build Environment 和 Python2.7。")]),t._v(" "),n("p",[t._v("然后就可以安装 node-gyp 了")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g node-gyp\n")])])]),n("p",[t._v("安装后，下载 GTK 2 以及 libjpeg-turbo SDK for Visual C++，请根据系统选择 32 位或者 64 位下载。")]),t._v(" "),n("p",[t._v("GTK2：32 位 "),n("a",{attrs:{href:"http://ftp.gnome.org/pub/GNOME/binaries/win32/gtk+/2.24/gtk+-bundle_2.24.10-20120208_win32.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("gtk±bundle_2.24.10-20120208_win32.zip"),n("OutboundLink")],1),t._v("\nGTK2：64 位 "),n("a",{attrs:{href:"http://ftp.gnome.org/pub/GNOME/binaries/win64/gtk+/2.22/gtk+-bundle_2.22.1-20101229_win64.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("gtk±bundle_2.22.1-20101229_win64.zip"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("libjpeg-turbo：32 位 "),n("a",{attrs:{href:"https://sourceforge.net/projects/libjpeg-turbo/files/1.5.2/libjpeg-turbo-1.5.2-vc.exe/download",target:"_blank",rel:"noopener noreferrer"}},[t._v("libjpeg-turbo-1.5.2-vc.exe"),n("OutboundLink")],1),t._v("\nlibjpeg-turbo：64 位 "),n("a",{attrs:{href:"https://sourceforge.net/projects/libjpeg-turbo/files/1.5.2/libjpeg-turbo-1.5.2-vc64.exe/download",target:"_blank",rel:"noopener noreferrer"}},[t._v("libjpeg-turbo-1.5.2-vc64.exe"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("GTK2 默认安装 C:\\GTK，如安装其它目录，需要执行命令")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("node-gyp rebuild --GTK_Root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("somewhere"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GTK\n")])])]),n("p",[t._v("libjpeg-turbo 默认安装 32 位 C:\\libjpeg-turbo 或 64 位 C:\\libjpeg-turbo64，如安装其它目录，需要执行命令")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("node-gyp rebuild --jpeg_root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("somewhere"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("libjpeg-turbo\n")])])]),n("p",[t._v("完成后，执行安装 Canvas 命令即可安装。")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" canvas\n")])])]),n("h2",{attrs:{id:"后记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),n("p",[t._v("最后一步安装 Canvas 时，有一个隐藏的坑。如果 Windows 登录用户名存在中文的话，部分目录会含有中文。导致安装出现错误。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("c:\\users\\中文用户名\\appdata\\roaming\\npm\\node_modules\\canvas\\src\\backend\\ImageBackend.h(4): fatal error C1083: 无法打开包括文件: “v8.h”: No such file or directory (编译源文件 ..\n\\src\\backend\\ImageBackend.cc) [C:\\Users\\中文用户名\\AppData\\Roaming\\npm\\node_modules\\canvas\\build\\canvas.vcxproj]\nc:\\users\\中文用户名\\appdata\\roaming\\npm\\node_modules\\canvas\\src\\backend\\PdfBackend.h(4): fatal error C1083: 无法打开包括文件: “v8.h”: No such file or directory (编译源文件 ..\\s\nrc\\backend\\PdfBackend.cc) [C:\\Users\\中文用户名\\AppData\\Roaming\\npm\\node_modules\\canvas\\build\\canvas.vcxproj]\n  Backends.cc\nc:\\users\\中文用户名\\appdata\\roaming\\npm\\node_modules\\canvas\\src\\backend\\SvgBackend.h(4): fatal error C1083: 无法打开包括文件: “v8.h”: No such file or directory (编译源文件 ..\\s\nrc\\backend\\SvgBackend.cc) [C:\\Users\\中文用户名\\AppData\\Roaming\\npm\\node_modules\\canvas\\build\\canvas.vcxproj]\n")])])]),n("p",[t._v("经过调试，此坑是由于 node-gyp 在生成编译文件时，XML 格式的配置文件会有转码问题，不包含中文的话，转码正常。包含中文后，由于 Windows 系统是使用 GBK，而 Python 使用 UTF-8 导致错误。")]),t._v(" "),n("p",[t._v("具体问题出现在 easy_xml.py 文件内。打开 easy_xml.py 文件，找到 119 行左右，如下代码：")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  xml_string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoding"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  xml_string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latin-1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoding"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the old content")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("将代码替换为：")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endswith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vcxproj'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    xml_string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xml_string\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    xml_string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoding"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  xml_string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latin-1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoding"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the old content")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It has changed, write it")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" existing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endswith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vcxproj'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#use utf_8 encoding to generate vcxproj file")]),t._v("\n    f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" codecs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf_8_sig'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#f = open(path, 'w')")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#convert GBK string to Unicode string to ensure the later utf_8 encoding")]),t._v("\n    f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gbk'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xml_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("主要需要判断生成的.vcxproj 项目配置文件时，避免 xml_string 被初始化编码。并在写文件时，将 xml_string 从 GBK 解码，并且打开的文件也设置成 utf_8_sig 编码类型即可。")]),t._v(" "),n("p",[t._v("关于 easy_xml.py 可能会存在两个位置，一个是 Windows 程序数据目录，一个是 Node.js 的安装目录。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("C:\\Users\\王锐\\AppData\\Roaming\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\easy_xml.py\nC:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\easy_xml.py\n")])])]),n("p",[t._v("如果执行 node-gyp 的命令，会调用第一个路径下的文件，执行 npm 命令，会调用第二个路径下的文件。")]),t._v(" "),n("h2",{attrs:{id:"参考内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考内容"}},[t._v("#")]),t._v(" 参考内容")]),t._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://github.com/Automattic/node-canvas/wiki/Installation---Windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-canvas: Installation Windows"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://blog.sina.com.cn/s/blog_5e83fce60102vjdz.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nodejs 安装模块出现 MSB4025 错误"),n("OutboundLink")],1)])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/weixin_34246551/article/details/91920233",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows 中安装 Canvas 插件"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);