(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{2066:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("很多开发人员讨厌 CSS。根据我的经验，这是因为没有花时间学习 CSS。\nCSS 不是最漂亮的“语言”，但它已经成功地为 web 样式提供了超过 20 年的支持。还不错吧?\n但是，当您编写更多的 CSS 时，您很快就会看到一个很大的缺点。\n"),n("strong",[s._v("很难维护 CSS。")]),s._v("\n写得不好的 CSS 很快就会变成噩梦。\n下面是一些命名规范，可以为您节省一些压力和时间。")]),s._v(" "),n("figure",[n("img",{attrs:{src:a(545),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("h2",{attrs:{id:"使用连字符-分隔字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用连字符-分隔字符串"}},[s._v("#")]),s._v(" 使用连字符’-'分隔字符串")]),s._v(" "),n("p",[s._v("如果你写了很多 JavaScript，那么"),n("code",[s._v("驼峰式")]),s._v("编写变量就是常见的做法。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" redBox "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'...'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("看起来还不错。\n问题是这种命名形式不适合 CSS。\nDo not do this:")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".redBox")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1px solid red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("Instead, do this:")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".red-box")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1px solid red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("这是一个非常标准的 CSS 命名规范。可以说它更具有可读性。\n并且，它与 CSS 属性名称一致。")]),s._v(" "),n("div",{staticClass:"language-less extra-class"},[n("pre",{pre:!0,attrs:{class:"language-less"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Correct")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".some-class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-weight")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10em"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Wrong")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".some-class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("fontweight")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10em"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h2",{attrs:{id:"bem-命名规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bem-命名规范"}},[s._v("#")]),s._v(" BEM 命名规范")]),s._v(" "),n("p",[s._v("每个团队有不同的方法来编写 CSS 选择器。有些团队使用连字符分隔符，而另一些团队则更喜欢使用名为 BEM 的结构化命名规范。\n通常来讲，CSS 命名约定试图解决 3 个问题：")]),s._v(" "),n("ol",[n("li",[s._v("想知道选择器的作用，只需查看其名称即可。")]),s._v(" "),n("li",[s._v("想了解选择器的使用位置，只需查看它即可。")]),s._v(" "),n("li",[s._v("想了解类名之间的关系，只需查看它们即可。")])]),s._v(" "),n("p",[s._v("你有没有见过这样的类名：")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".nav--secondary")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  ..."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".nav__header")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  ..."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("这就是 BEM 命名规范。")]),s._v(" "),n("h2",{attrs:{id:"通过以下例子来解释-bem"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过以下例子来解释-bem"}},[s._v("#")]),s._v(" 通过以下例子来解释 BEM")]),s._v(" "),n("p",[s._v("假设 BEM 将整个用户界面划分为小型可重用组件。\n看下面的图片：")]),s._v(" "),n("figure",[n("img",{staticClass:"md-image",attrs:{src:a(546),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("p",[s._v("这个火柴人代表整个组件。\n你可能已经猜到 BEM 中的 B 代表 "),n("strong",[s._v("Block")]),s._v("。\n现实中，这个‘块’可以表示站点导航，页眉，页脚或者任何其他设计块。\n按照上面的说法，这个组件理想的类名应该是"),n("code",[s._v("stick-man")]),s._v("。\n组件的样式应该是：")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("我们这里已经使用了分隔符，good！")]),s._v(" "),n("figure",[n("img",{staticClass:"md-image",attrs:{src:a(547),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("h3",{attrs:{id:"e-for-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#e-for-elements"}},[s._v("#")]),s._v(" E for Elements")]),s._v(" "),n("p",[s._v("BEM 中的 E 代表 Elements。\n这个整体的组件很少孤立存在。\n比如，火柴人有一个"),n("code",[s._v("头")]),s._v("，两个"),n("code",[s._v("手臂")]),s._v("，和"),n("code",[s._v("脚")]),s._v("。")]),s._v(" "),n("figure",[n("img",{staticClass:"md-image",attrs:{src:a(548),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("p",[s._v("头部，脚部和手臂都是组件内的元素。它们可以被视为子组件，即整个父组件的子组件。\n使用 BEM 命名规范，通过添加两个下划线,后跟元素名称来派生元素类名称。\nFor example:")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man__head")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man__arms")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man__feet")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h3",{attrs:{id:"m-for-modifiers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#m-for-modifiers"}},[s._v("#")]),s._v(" M for Modifiers")]),s._v(" "),n("p",[s._v("BEM 中的 M 代表修饰符。\n如果这个火柴人被修改了，我们可以有一个蓝色或红色的火柴人，怎么办？")]),s._v(" "),n("figure",[n("img",{staticClass:"md-image",attrs:{src:a(549),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("p",[s._v("现实中，这可以是红色按钮或蓝色按钮。这些是对相关组件的修改。\n使用 BEM，通过添加两个"),n("code",[s._v("连字符")]),s._v("后跟元素名称来派生修饰符类名。\nFor example:")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man--blue")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man--red")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("最后一个示例显示了父组件被修改。但这并非总是如此。\n假如我们的火柴人有两个不同大小的头部，怎么办？")]),s._v(" "),n("figure",[n("img",{staticClass:"md-image",attrs:{src:a(550),alt:""}}),n("figcaption",[s._v("章节配图")])]),s._v(" "),n("p",[s._v("现在元素被修改了。请记住，元素是整个包含块中的子组件。\n"),n("code",[s._v(".stick-man")]),s._v(" 代表 "),n("strong",[s._v("Block")]),s._v("，"),n("code",[s._v(".stick-man_head")]),s._v("代表 "),n("strong",[s._v("Element")]),s._v("。\n根据上面的例子，双连字符应该这样使用：")]),s._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man__head--small")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".stick-man__head--big")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("Now you’ve got it.\n这基本上是 BEM 命名约定的工作原理。\n就我个人而言，对于简单的项目仅适用连字符分隔符类名称就可以，而对于更多页面则适用 BEM。\n你可以"),n("a",{attrs:{href:"http://getbem.com/naming/",target:"_blank",rel:"noopener noreferrer"}},[s._v("阅读更多"),n("OutboundLink")],1),s._v("关于 BEM 的信息。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6945262660887773198",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS 命名规范 - BEM"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);