(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{1985:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"为什么写这篇文章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么写这篇文章"}},[s._v("#")]),s._v(" 为什么写这篇文章")]),s._v(" "),n("p",[s._v("很多 "),n("code",[s._v("Node.js")]),s._v(" 开发者，都知道有 "),n("code",[s._v("package.json")]),s._v(" 这个文件，也多少都了解一些 "),n("code",[s._v("npm")]),s._v(" 知识，但是可能没有系统的学习过，这部分的知识对于开发一个 "),n("code",[s._v("cli")]),s._v(" 工具，发布自己的 "),n("code",[s._v("npm")]),s._v(" 包都很常用，开发中也会经常用到"),n("code",[s._v("npm script")]),s._v("内容，系统的学习一下确实会有所帮助，上面三个场景如果你都用不到，配置上节约时间，知其所以然也是有必要的！")]),s._v(" "),n("h2",{attrs:{id:"本文你能学到哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本文你能学到哪些"}},[s._v("#")]),s._v(" 本文你能学到哪些？")]),s._v(" "),n("figure",[n("img",{attrs:{src:a(596),alt:""}}),n("figcaption",[s._v("Package.json 知识全览图")])]),s._v(" "),n("p",[s._v("文章比较长，希望耐心看完！")]),s._v(" "),n("blockquote",[n("p",[s._v("写文本的目标：希望再遇到"),n("code",[s._v("package.json")]),s._v(" ,"),n("code",[s._v("npm")]),s._v(" 相关的问题，不用再去搜索，一篇文章全覆盖，不一定全掌握，知道我这里都有，需要时候能直接来查就好了，也为了方便自己后面查阅。(本文主要讲的部分是 "),n("code",[s._v("npm script")]),s._v("，个人认为很常用，一些文章都没有讲)")])]),s._v(" "),n("p",[s._v("好了，开始我们的正文学习吧。")]),s._v(" "),n("h2",{attrs:{id:"package-json-如何产生的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-json-如何产生的"}},[s._v("#")]),s._v(" package.json 如何产生的")]),s._v(" "),n("h3",{attrs:{id:"npm-init"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-init"}},[s._v("#")]),s._v(" npm init")]),s._v(" "),n("p",[n("code",[s._v("npm init")]),s._v(" 命令用来初始化一个简单的 "),n("code",[s._v("package.json")]),s._v(" 文件，执行该命令后终端会依次询问 "),n("code",[s._v("name")]),s._v(", "),n("code",[s._v("version")]),s._v(", "),n("code",[s._v("description")]),s._v(" 等字段。")]),s._v(" "),n("h4",{attrs:{id:"npm-init-默认执行行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-init-默认执行行为"}},[s._v("#")]),s._v(" npm init 默认执行行为")]),s._v(" "),n("p",[s._v("我们在执行 "),n("code",[s._v("npm init")]),s._v(" 的时候,会有一个初始化 "),n("code",[s._v("pacakge.json")]),s._v(" 过程，然后一路回车，其实可以直接使用 "),n("code",[s._v("npm init --yes")]),s._v(" 在命令后追加 "),n("code",[s._v("--yes")]),s._v(" 参数即可，其作用与一路回车相同，这样生成的文件中就包含 "),n("code",[s._v("package.json")]),s._v(" 文件")]),s._v(" "),n("h4",{attrs:{id:"自定义-npm-init-行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义-npm-init-行为"}},[s._v("#")]),s._v(" 自定义 npm init 行为")]),s._v(" "),n("p",[n("code",[s._v("npm init")]),s._v(" 命令的原理并不复杂，调用 shell 脚本，输出一个初始化的 "),n("code",[s._v("package.json")]),s._v(" 文件。所以相应地，自定义 "),n("code",[s._v("npm init")]),s._v(" 命令的实现方式也很简单，在电脑 "),n("code",[s._v("npmStudy")]),s._v(" 目录创建一个 "),n("code",[s._v(".npm-init.js")]),s._v(" 即可，该文件的 "),n("code",[s._v("module.exports")]),s._v(" 即为 "),n("code",[s._v("package.json")]),s._v(" 配置内容，需要获取用户输入时候，使用 "),n("code",[s._v("prompt()")]),s._v(" 方法即可。例如编写这样的 "),n("code",[s._v("~/.npm-init.js")])]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" desc "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'description?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A new package...'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bar "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'count?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'42'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  foo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    bar"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    count"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    process\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cwd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  version"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'version?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.1.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  description"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" desc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  main"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'index.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("然后在 "),n("code",[s._v("/npmStudy")]),s._v(" 目录下执行 "),n("code",[s._v("npm init")]),s._v(" 会出现下图中对一系列操作")]),s._v(" "),n("figure",[n("img",{attrs:{src:a(597),alt:""}}),n("figcaption",[s._v("Package.json 知识全览图")])]),s._v(" "),n("p",[s._v("然后生成 "),n("code",[s._v("package.json")]),s._v(" 文件。到这里一个 "),n("code",[s._v("npm init")]),s._v(" 简单自定义过程结束,知道了两种生成 "),n("code",[s._v("pacakge.json")]),s._v(" 的方式")]),s._v(" "),n("h2",{attrs:{id:"package-json-中的常规属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-json-中的常规属性"}},[s._v("#")]),s._v(" package.json 中的常规属性")]),s._v(" "),n("p",[s._v("对于常规属性都知道的可以忽略，继续往下看 "),n("code",[s._v("npm script")]),s._v(" 主要想讲的部分。")]),s._v(" "),n("h3",{attrs:{id:"npm-中的依赖包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-中的依赖包"}},[s._v("#")]),s._v(" npm 中的依赖包")]),s._v(" "),n("p",[s._v("这里只说我们常用的两个依赖包 "),n("code",[s._v("dependenices")]),s._v(" 和 "),n("code",[s._v("devDependenices")]),s._v(",其它的一些依赖包只有作为包的发布者才会用到，需要的小伙伴自行查看文档。")]),s._v(" "),n("h4",{attrs:{id:"dependenices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dependenices"}},[s._v("#")]),s._v(" dependenices")]),s._v(" "),n("p",[s._v("通过命令"),n("code",[s._v("npm install/i packageName -S/--save")]),s._v("把包装在此依赖项里。如果没有指定版本，直接写一个包的名字，则安装当前 npm 仓库中这个包的最新版本。如果要指定版本的，可以把版本号写在包名后面，比如"),n("code",[s._v("npm i vue@3.0.1 -S")]),s._v("。")]),s._v(" "),n("blockquote",[n("p",[s._v("从"),n("code",[s._v("npm 5.x")]),s._v("开始，可以不用手动添加"),n("code",[s._v("-S/--save")]),s._v("指令，直接执行"),n("code",[s._v("npm i packageName")]),s._v("把依赖包添加到"),n("code",[s._v("dependencies")]),s._v("中去。")])]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dependencies"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lodash"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^4.17.13"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"moment"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^2.24.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h4",{attrs:{id:"devdependenices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#devdependenices"}},[s._v("#")]),s._v(" devDependenices")]),s._v(" "),n("p",[s._v("有一些包有可能你只是在开发环境中用到，例如你用于检测代码规范的 "),n("code",[s._v("eslint")]),s._v(" ,用于进行测试的 "),n("code",[s._v("jest")]),s._v(" ，用户使用你的包时即使不安装这些依赖也可以正常运行，反而安装他们会耗费更多的时间和资源，所以你可以把这些依赖添加到 "),n("code",[s._v("devDependencies")]),s._v(" 中，这些依赖照样会在你本地进行 "),n("code",[s._v("npm install")]),s._v(" 时被安装和管理，但是不会被安装到生产环境：")]),s._v(" "),n("p",[s._v("“devDependencies”: {\n“jest”: “^24.3.1”,\n“eslint”: “^6.1.0”,\n}")]),s._v(" "),n("h4",{attrs:{id:"二者简单对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二者简单对比"}},[s._v("#")]),s._v(" 二者简单对比")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("devDependencies")]),s._v(" 主要是存放用于本地开发的")]),s._v(" "),n("li",[n("code",[s._v("dependencies")]),s._v(" 会在我们开发的时候带到线上")]),s._v(" "),n("li",[n("code",[s._v("-D")]),s._v(" 会添加到 "),n("code",[s._v("devDependencies")]),s._v(" 里面，"),n("code",[s._v("-S")]),s._v(" 会添加到 "),n("code",[s._v("dependencies")])]),s._v(" "),n("li",[n("code",[s._v("--save-dev")]),s._v(" 也会添加到 "),n("code",[s._v("devDependencies")])]),s._v(" "),n("li",[n("code",[s._v("--save")]),s._v(" 会添加到 "),n("code",[s._v("dependencies")])]),s._v(" "),n("li",[s._v("从"),n("code",[s._v("npm 5.x")]),s._v("开始，如果什么参数都不带，那么默认添加到 "),n("code",[s._v("dependencies")]),s._v(" 中")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加到 devDependencies")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -D xxxx\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加到 dependencies")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -S xxxx\n")])])]),n("h3",{attrs:{id:"bin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bin"}},[s._v("#")]),s._v(" bin")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bin"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vm2"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./bin/vm2"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),n("p",[n("code",[s._v("bin")]),s._v(" 字段指定了各个内部命令对应的可执行文件的位置。如果全局安装模块报，npm 会使用符号链接把可执行文件链接到 "),n("code",[s._v("/usr/local/bin")]),s._v("，如果项目中安装，会链接到 "),n("code",[s._v("./node_modules/.bin/")]),s._v("。")]),s._v(" "),n("p",[s._v("上面的这种当你的包安装到全局时："),n("code",[s._v("npm")]),s._v(" 会在 "),n("code",[s._v("/usr/local/bin")]),s._v(" 下创建一个以 "),n("code",[s._v("vm2")]),s._v(" 为名字的软链接，指向全局安装下来的 "),n("code",[s._v("vm2")]),s._v(" 包下面的 "),n("code",[s._v('"./bin/index.js"')]),s._v("。这时你在命令行执行 "),n("code",[s._v("vm2")]),s._v(" 则会调用链接到的这个 "),n("code",[s._v("js")]),s._v(" 文件。")]),s._v(" "),n("h3",{attrs:{id:"main"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[s._v("#")]),s._v(" main")]),s._v(" "),n("p",[s._v("一个常用的 npm 包")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"main"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lib/index.js"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[n("code",[s._v("main")]),s._v(" 属性指定程序的主入口文件，其他项目在引用这个 "),n("code",[s._v("npm")]),s._v(" 包时，实际上引入的是 "),n("code",[s._v("lib/index")]),s._v(" 中暴露出去的模块。")]),s._v(" "),n("h2",{attrs:{id:"npm-script-本文重点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-script-本文重点"}},[s._v("#")]),s._v(" npm script(本文重点)")]),s._v(" "),n("p",[n("code",[s._v("npm script")]),s._v(" 工作中应用到的一个场景，决定看一下原理。")]),s._v(" "),n("h3",{attrs:{id:"什么是-npm-script-脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-npm-script-脚本"}},[s._v("#")]),s._v(" 什么是 npm script 脚本?")]),s._v(" "),n("p",[s._v("在生成的 "),n("code",[s._v("package.json")]),s._v(" 文件中，有一个 "),n("code",[s._v("scripts")]),s._v(" 对象，在这个对象中，"),n("code",[s._v("npm")]),s._v(" 允许使用 "),n("code",[s._v("scripts")]),s._v(" 字段定义脚本命令。")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test.js"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tsc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),n("p",[n("code",[s._v("scripts")]),s._v(" 对象中每一个属性，对应一段脚本。比如，"),n("code",[s._v("test")]),s._v(" 命令对应的脚本是 "),n("code",[s._v("node test.js")]),s._v("。")]),s._v(" "),n("p",[s._v("命令行下使用 "),n("code",[s._v("npm run")]),s._v(" 命令，就可以执行这段脚本。")]),s._v(" "),n("p",[s._v("查看当前项目的所有 "),n("code",[s._v("npm")]),s._v(" 脚本命令，可以使用不带任何参数的"),n("code",[s._v("npm run")]),s._v("命令。")]),s._v(" "),n("h3",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),n("p",[s._v("我们每次在运行 "),n("code",[s._v("scripts")]),s._v(" 中的一个属性时候("),n("code",[s._v("npm run")]),s._v("),实际系统都会自动新建一个 shell(一般是 Bash)，在这个 shell 里面执行指定的脚本命令。"),n("strong",[s._v("因此 凡是能在 shell 中允许的脚本，都可以写在 npm scripts 中。")])]),s._v(" "),n("blockquote",[n("p",[s._v("特别的点，"),n("code",[s._v("npm run 新建的 shell")]),s._v("，会在当前目录的 "),n("code",[s._v("node_modules/.bin")]),s._v(" 子目录加入到 PATH 变量，执行结束后，再将 PATH 变量恢复原样。也就是说，当前项目目录 "),n("code",[s._v("node——modules/.bin")]),s._v(" 子目录中所有的脚本，都可以直接用脚本名称调用，不需要增加路径.（简单总结：通过 npm 启动的脚本，会默认把 "),n("code",[s._v("node_modules/.bin")]),s._v(" 加到 PATH 环境变量中。）")])]),s._v(" "),n("h4",{attrs:{id:"例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),n("p",[s._v("当前项目的依赖里面有 Mocha，只要直接写"),n("code",[s._v("mocha test")]),s._v(" 就可以了。")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mocha test"')]),s._v("\n")])])]),n("p",[s._v("而不用写成下面这样。")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./node_modules/.bin/mocha test"')]),s._v("\n")])])]),n("p",[s._v("然后我们就可以直接执行 "),n("code",[s._v("npm run test")]),s._v(" 了。"),n("code",[s._v("npm")]),s._v(" 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是 0，npm 就认为这个脚本执行失败。")]),s._v(" "),n("p",[s._v("这里有的小伙伴可能会有疑问，"),n("code",[s._v("node_modules")]),s._v("目录下的"),n("code",[s._v(".bin")]),s._v("文件是哪里来的?我之前也有这样的疑问，打开了一个 "),n("code",[s._v(".bin/tsc")]),s._v(",里面的内容是这样的")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env node")]),s._v("\nrequire"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../lib/tsc.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),n("p",[n("code",[s._v("npm install")]),s._v(" 安装的某个模块，如果模块在 "),n("code",[s._v("package.json")]),s._v(" 中配置了 "),n("code",[s._v("bin")]),s._v(" 属性，在安装时候会自动软链接到 "),n("code",[s._v("node_modules/.bin")]),s._v(" 中，举个例子：如 "),n("code",[s._v("mocha")]),s._v(" 源码 配置了：")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mocha"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bin"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"mocha"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./bin/mocha"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("h3",{attrs:{id:"脚本默认值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#脚本默认值"}},[s._v("#")]),s._v(" 脚本默认值")]),s._v(" "),n("p",[s._v("正常情况下，"),n("code",[s._v("npm")]),s._v(" 脚本是用户自己定义。但是 "),n("code",[s._v("npm")]),s._v(" 本身对两个脚本提供了默认值，这两个脚本不用在 "),n("code",[s._v("script")]),s._v(" 属性中定义，可以直接使用")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node server.js"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"install"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-gyp rebuild"')]),s._v("\n")])])]),n("ul",[n("li",[n("code",[s._v("npm run start")]),s._v(" 的默认值是 "),n("code",[s._v("node server.js")]),s._v(" ，前提是根目录下有 "),n("code",[s._v("server.js")]),s._v(" 这个脚本")]),s._v(" "),n("li",[n("code",[s._v("npm run install")]),s._v(" 的默认值是 "),n("code",[s._v("node-gyp rebuild")]),s._v("，前提是根目录下有 "),n("code",[s._v("binding.gyp")]),s._v(" 文件")])]),s._v(" "),n("blockquote",[n("p",[s._v("扩展小知识，本文不重点说，"),n("code",[s._v("node-gyp")]),s._v(" 是什么，"),n("code",[s._v("binding.gyp")]),s._v(" 文件是什么？GYP 是一种构建自动化工具。")])]),s._v(" "),n("ul",[n("li",[s._v("node-gyp："),n("code",[s._v("node")]),s._v(" 下的 "),n("code",[s._v("gyp")]),s._v("。"),n("code",[s._v("npm")]),s._v(" 为了方便直接源码分发，用户装的时候需要自己进下编译，我们在开发 node 程序中需要调用一些其他语言编写的工具甚至 dll，这时候需要先编译下其他语言，否则会出现跨平台的问题。"),n("code",[s._v("node-gyp")]),s._v(" 是用来编译原生 "),n("code",[s._v("C++")]),s._v(" 模块的，也可以编写自己写的 C++文件，node-gyp 在较新的 Node 版本中都是自带的，而且是最先版本。")]),s._v(" "),n("li",[s._v("gyp 文件：当 "),n("code",[s._v("Node.js")]),s._v(" 项目中有需要和 "),n("code",[s._v("C++")]),s._v(" 交互的需求时，项目的根目需要创建 "),n("code",[s._v("binging.gyp")]),s._v(" 文件，每个"),n("code",[s._v(".gyp")]),s._v(" 文件都描述了如何去构建项目，每个.gyp 文件都描述了如何去构建项目，gyp 文件的语法是 "),n("code",[s._v("Python")]),s._v("数据格式(Json 格式)，配置中数据是键-值对的形式。\n看一段简单的 .gyp 文件,应该好理解一些。")])]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"targets"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"target_name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodecat"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sources"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/nodecat.cc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"include_dirs"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"include"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"libraries"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-lcatclient"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("想了解更多详细的可以看下面的文档。")]),s._v(" "),n("p",[s._v("binging.gyp 参数说明书/文档/指南(国外的一篇文档抄录，棒！)binging.gyp 参数说明书/文档/指南")]),s._v(" "),n("p",[s._v("关于 "),n("code",[s._v("node-gyp")]),s._v(" 和 "),n("code",[s._v("binding.gyp")]),s._v(" 后面会单独写一篇文章，这里先简单介绍，小伙伴们了解下。")]),s._v(" "),n("h3",{attrs:{id:"钩子-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#钩子-生命周期"}},[s._v("#")]),s._v(" 钩子(生命周期)")]),s._v(" "),n("p",[s._v("好多语言或者框架我们学的时候都会考虑到生命周期，其实 "),n("code",[s._v("package.json")]),s._v(" 中的 "),n("code",[s._v("script")]),s._v(" 也是有生命周期的。"),n("code",[s._v("npm")]),s._v(" 脚本有两个钩子，"),n("code",[s._v("pre")]),s._v(" 和 "),n("code",[s._v("post")]),s._v("，当我们执行"),n("code",[s._v("start")]),s._v("脚本时候，"),n("code",[s._v("start")]),s._v(" 的钩子就是 "),n("code",[s._v("prestart")]),s._v(" 和 "),n("code",[s._v("poststart。")])]),s._v(" "),n("p",[s._v("当我们执行 "),n("code",[s._v("npm run start")]),s._v(" 的时候，npm 会自动按照下面的顺序执行")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run prestart "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run start "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run poststart\n")])])]),n("p",[s._v("那这个钩子有什么用呢，在实际开发中，我们可以做一些准备或者清理工作，下面是个例子(引用的阮一峰老师文章中的例子)")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"clean"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rimraf ./dist && mkdir dist"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prebuild"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run clean"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=production webpack"')]),s._v("\n")])])]),n("blockquote",[n("p",[s._v("钩子好用，但是不可乱用，举个开发过程中遇到的坑，有一次想设置运行时的环境变量，当时想优雅一点，就在 "),n("code",[s._v("prestart")]),s._v(" 里面设置了一个环境变量，但是在项目 "),n("code",[s._v("start")]),s._v(" 的时候，无法拿到设置的环境变量，因为 "),n("code",[s._v("script")]),s._v(" 的属性运行的时候都会新启动一个 "),n("code",[s._v("shell")]),s._v("，所以在 "),n("code",[s._v("prestart")]),s._v("中设置的环境变量只对应了那个"),n("code",[s._v("shell")]),s._v("的运行时。")])]),s._v(" "),n("h3",{attrs:{id:"env-环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#env-环境变量"}},[s._v("#")]),s._v(" env 环境变量")]),s._v(" "),n("p",[s._v("我们在执行 "),n("code",[s._v("npm run")]),s._v(" 脚本时候, "),n("code",[s._v("npm")]),s._v(" 会设置一些特殊的 env 环境变量。其中"),n("code",[s._v("package.json")]),s._v("中的所有字段，都会被设置为以"),n("code",[s._v("npm_package_")]),s._v("开头的环境变量。看个简单的例子")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm-demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack --mode=production"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"files"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("可以得到 "),n("code",[s._v("npm_package_name、npm_package_version、npm_package_script_build、npm_package_files_0")]),s._v("等变量。注意上面 "),n("code",[s._v("package.json")]),s._v(" 中对象和数组中每个字段都会有对应的环境变量。")]),s._v(" "),n("p",[s._v("同时，"),n("code",[s._v("npm")]),s._v(" 相关的所有配置也会被设置为以"),n("code",[s._v("npm_config_")]),s._v("开头的环境变量。此外，还会设置一个比较特殊的环境变量"),n("code",[s._v("npm_lifecycle_event")]),s._v("，表示正在运行的脚本名称。比如执行"),n("code",[s._v("npm run serve")]),s._v(" 的时候，"),n("code",[s._v("process.env.npm_lifecycle_event")]),s._v("值为"),n("code",[s._v("serve")]),s._v("，通过判断这个变量，可以将一个脚本使用在不同的"),n("code",[s._v("npm scripts")]),s._v("中。这里还要提一下上面说的钩子，"),n("code",[s._v("npm_lifecycle_event")]),s._v("可以和钩子配合使用，利用这个变量，在同一个脚本文件里面，为不同的 "),n("code",[s._v("npm scripts")]),s._v(" 命令编写代码。请看下面的例子。")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TARGET")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("npm_lifecycle_event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TARGET")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'service'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("Running the service task!")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TARGET")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'preservice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("Running the preservice task!")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TARGET")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'postservice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("Running the postservice task!")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("blockquote",[n("p",[s._v("强调：这些环境变量只能在 "),n("code",[s._v("npm run")]),s._v(" 的脚本执行环境内拿到，正常执行的 "),n("code",[s._v("node")]),s._v(" 脚本是获取不到的。所以，不能直接通过 "),n("code",[s._v("env $npm_package_name")]),s._v(" 的形式访问，但可以在 "),n("code",[s._v("scripts")]),s._v(" 中定义脚本"),n("code",[s._v('"scripts": {"bundle": "echo $npm_package_name"}')]),s._v("来访问。")])]),s._v(" "),n("h4",{attrs:{id:"环境变量常用小技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境变量常用小技巧"}},[s._v("#")]),s._v(" 环境变量常用小技巧")]),s._v(" "),n("ol",[n("li",[s._v("env 命令可以列出所有环境变量")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("在 shell 脚本中输出环境变量")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v("在 shell 脚本设置环境变量")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /usr/local/lib\n")])])]),n("p",[s._v("有的时候我们需要设置的环境变量是相对项目的 再补充一个 shell 脚本中设置环境变量时候如何拼接相对路径")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${pwd}")]),s._v("/lib/include  //使用$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",也可以直接使用双引号\n")])])]),n("h3",{attrs:{id:"脚本传入参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#脚本传入参数"}},[s._v("#")]),s._v(" 脚本传入参数")]),s._v(" "),n("p",[s._v("说到脚本传入参数，需要再次提到前面说的 "),n("code",[s._v("pacakge.json")]),s._v(" 中的 "),n("code",[s._v("bin")]),s._v(" 字段，"),n("code",[s._v("bin")]),s._v(" 字段指定了各个内部命令对应的可执行文件的位置。前面已经说了 "),n("code",[s._v("bin")]),s._v(" 文件的产生，有了 "),n("code",[s._v("bin")]),s._v(" 字段，在安装这个模块的时候，"),n("code",[s._v("node_modules")]),s._v(" 下面的 "),n("code",[s._v(".bin/文件夹")]),s._v(" 下会有对应模块的文件，和模块中的文件相同，然后我们就可以通过调用这个文件脚本中的方法传入参数了。")]),s._v(" "),n("p",[s._v("在我的 "),n("code",[s._v("node_module")]),s._v(" 中找到一个简单 "),n("code",[s._v(".bin/文件")]),s._v(" 下的脚本，大家感受一下。")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env node")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'use strict'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nvar pkg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./package.json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nvar osName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nvar argv "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process.argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("help")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n console.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  '")]),s._v(" + pkg.description,\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  Example'")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'    os-name'")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'    OS X Mavericks'")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv.indexOf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--help'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n help"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv.indexOf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--version'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n console.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pkg.version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nconsole.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("osName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[n("code",[s._v("node")]),s._v(" 处理 "),n("code",[s._v("scripts")]),s._v(" 中的参数，除了"),n("strong",[s._v("属性后面的第一个命令，以空格分割的任何字符串(除特别 shell 语法)都是参数")]),s._v("，并且都能通过 "),n("code",[s._v("process.argv")]),s._v(" 属性访问。")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("process.argv")]),s._v(" 属性返回一个数组，数组包含了启动 "),n("code",[s._v("node")]),s._v(" 进程时的命令行参数。第一个元素为启动 "),n("code",[s._v("node")]),s._v(" 进程的可执行文件的绝对路径名 "),n("code",[s._v("process.execPath")]),s._v(",第二个元素为当前执行的 "),n("code",[s._v("jacascript")]),s._v(" 文件路径。"),n("strong",[s._v("剩余的元素为其他命令行参数。")])])]),s._v(" "),n("p",[s._v("如下 "),n("code",[s._v("script")]),s._v(" 例子")]),s._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"serve"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service serve --mode=dev --mobile -config build/example.js"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("p",[s._v("当我们执行 "),n("code",[s._v("npm run server")]),s._v(" 命令的时候，"),n("code",[s._v("process.argv")]),s._v(" 的具体内容为：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[ '/usr/local/Cellar/node/12.14.1/bin/node',\n  '/Users/mac/Vue-projects/hao-cli/node_modules/.bin/vue-cli-service',\n  'serve',\n  '--mode=dev',\n  '--mobile',\n  '-config',\n  'build/example.js']\n")])])]),n("p",[s._v("再列举几个传参可能有的方式")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve --params  // 参数params将转化成process.env.npm_config_params "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve --params"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" // 参数params将转化成process.env.npm_config_params "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve -params  // 等同于--params参数\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve -- --params  // 将--params参数添加到process.env.argv数组中\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve params  // 将params参数添加到process.env.argv数组中\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve -- params  // 将params参数添加到process.env.argv数组中\n")])])]),n("p",[s._v("对比下 "),n("code",[s._v("npm install koa2 --save")]),s._v(" 是不是知道了 bin 脚本中接收到的 "),n("code",[s._v("process.env.npm_config_save = true;")]),s._v(" 我想是这样的，有兴趣的小伙伴去看源码验证下。")]),s._v(" "),n("h3",{attrs:{id:"执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[s._v("#")]),s._v(" 执行顺序")]),s._v(" "),n("p",[n("code",[s._v("npm")]),s._v(" 脚本执行多任务分为两种情况")]),s._v(" "),n("ul",[n("li",[s._v("并行任务(同时的平行执行)，使用&符号")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run script1.js "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run script2.js\n")])])]),n("ul",[n("li",[s._v("串行任务(前一个任务成功，才执行下一个任务)，使用 && 符号")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run script1.js "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run script2.js\n")])])]),n("h3",{attrs:{id:"任意脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#任意脚本"}},[s._v("#")]),s._v(" 任意脚本")]),s._v(" "),n("p",[s._v("我们配置的脚本命令，如 "),n("code",[s._v('"start": "node test.js"')]),s._v("，"),n("code",[s._v("node test.js")]),s._v(" 会当做一行代码传递给系统的 "),n("code",[s._v("shell")]),s._v(" 去解释执行。实际使用的 "),n("code",[s._v("shell")]),s._v(" 可能会根据系统平台而不同，类 "),n("code",[s._v("UNIX")]),s._v(" 系统里，如 "),n("code",[s._v("macOS")]),s._v(" 或 "),n("code",[s._v("linux")]),s._v(" 中指代的是 "),n("code",[s._v("/bin/sh")]),s._v("， 在 "),n("code",[s._v("windows")]),s._v(" 中使用的是 "),n("code",[s._v("cmd.exe")]),s._v("。原理我们也看了，因为交给 "),n("code",[s._v("shell")]),s._v(" 去解释执行的，说明配置的脚本可以是任意能够在 "),n("code",[s._v("shell")]),s._v(" 中运行的命令，而不仅仅是 "),n("code",[s._v("node")]),s._v(" 脚本或者 "),n("code",[s._v("js")]),s._v(" 代码。如果你的系统里安装了 "),n("code",[s._v("python")]),s._v("（或者说系统变量 "),n("code",[s._v("PATH")]),s._v("里能找到 "),n("code",[s._v("python")]),s._v(" 命令），你也可以将 "),n("code",[s._v("scripts")]),s._v(" 配置为 "),n("code",[s._v('"myscript": "python xxx.py"')])]),s._v(" "),n("h2",{attrs:{id:"npm-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-配置"}},[s._v("#")]),s._v(" npm 配置")]),s._v(" "),n("p",[n("code",[s._v("npm")]),s._v(" 的配置操作可以帮助我们预先设定好"),n("code",[s._v("npm")]),s._v("对项目的行为动作，也可以让我们预先定义好一些配置项以供项目中使用。所以了解"),n("code",[s._v("npm")]),s._v("的配置机制也是很有必要。")]),s._v(" "),n("h3",{attrs:{id:"npm-config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-config"}},[s._v("#")]),s._v(" npm config")]),s._v(" "),n("p",[n("code",[s._v("npm cli")]),s._v(" 提供了 "),n("code",[s._v("npm config")]),s._v(" 命令进行 "),n("code",[s._v("npm")]),s._v(" 相关配置，通过 "),n("code",[s._v("npm config ls -l")]),s._v(" 可查看 "),n("code",[s._v("npm")]),s._v(" 的所有配置，包括默认配置。"),n("code",[s._v("npm")]),s._v(" 文档页为每个配置项提供了详细的说明 "),n("code",[s._v("https://docs.npmjs.com/misc/config")]),s._v(" . 修改配置的命令为 "),n("code",[s._v("npm config set")]),s._v(", 我们使用相关的常见重要配置:")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("proxy, https-proxy")]),s._v(": 指定 npm 使用的代理")]),s._v(" "),n("li",[n("code",[s._v("registry")]),s._v(" 指定 "),n("code",[s._v("npm")]),s._v(" 下载安装包时的源，默认为 "),n("code",[s._v("https://registry.npmjs.org/")]),s._v(" 可以指定为私有 "),n("code",[s._v("Registry")]),s._v(" 源")]),s._v(" "),n("li",[n("code",[s._v("package-lock")]),s._v(" 指定是否默认生成 "),n("code",[s._v("package-lock")]),s._v(" 文件，建议保持默认 "),n("code",[s._v("true")])]),s._v(" "),n("li",[n("code",[s._v("save true/false")]),s._v(" 指定是否在 "),n("code",[s._v("npm install")]),s._v(" 后保存包为 "),n("code",[s._v("dependencies")]),s._v(", "),n("code",[s._v("npm 5")]),s._v(" 起默认为 "),n("code",[s._v("true")])])]),s._v(" "),n("p",[s._v("删除指定的配置项命令为 "),n("code",[s._v("npm config delete <key>")]),s._v(".")]),s._v(" "),n("p",[s._v("这里最常见的一个操作是 "),n("code",[s._v("npm")]),s._v(" 太慢，设置淘宝镜像")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("npm config set registry https://registry.npm.taobao.org")])])]),s._v(" "),n("p",[s._v("恢复使用之前的 "),n("code",[s._v("npm")])]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("npm config set registry https://registry.npmjs.org")])])]),s._v(" "),n("h3",{attrs:{id:"env-环境变量-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#env-环境变量-2"}},[s._v("#")]),s._v(" env 环境变量")]),s._v(" "),n("p",[s._v("如果"),n("code",[s._v("env")]),s._v("环境变量中存在以"),n("code",[s._v("npm_config_")]),s._v("为前缀的环境变量，则会被识别为"),n("code",[s._v("npm")]),s._v("的配置属性。比如在"),n("code",[s._v("env")]),s._v("环境变量中设置"),n("code",[s._v("npm_config_package_lock")]),s._v("变量：")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" npm_config_package_lock"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//修改的是内存中的变量，只对当前终端有效")]),s._v("\n")])])]),n("p",[s._v("这时候执行"),n("code",[s._v("npm install")]),s._v("，"),n("code",[s._v("npm")]),s._v("会从环境变量中读取到这个配置项，从而不会生成"),n("code",[s._v("package-lock.json")]),s._v("文件。")]),s._v(" "),n("blockquote",[n("p",[s._v("查看某个环境变量："),n("code",[s._v("echo $NODE_ENV")]),s._v(" 删除某个环境变量："),n("code",[s._v("unset NODE_ENV")])])]),s._v(" "),n("h3",{attrs:{id:"npmrc-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npmrc-文件"}},[s._v("#")]),s._v(" npmrc 文件")]),s._v(" "),n("p",[s._v("除了使用 "),n("code",[s._v("CLI")]),s._v(" 的 "),n("code",[s._v("npm config")]),s._v(" 命令显示更改 "),n("code",[s._v("npm")]),s._v(" 配置，还可以通过 "),n("code",[s._v("npmrc")]),s._v(" 文件直接修改配置。")]),s._v(" "),n("p",[s._v("这样的 "),n("code",[s._v("npmrc")]),s._v(" 文件优先级由高到低包括：")]),s._v(" "),n("ul",[n("li",[s._v("工程内配置文件: "),n("code",[s._v("/path/to/my/project/.npmrc")])]),s._v(" "),n("li",[s._v("用户级配置文件: "),n("code",[s._v("~/.npmrc")])]),s._v(" "),n("li",[s._v("全局配置文件: "),n("code",[s._v("$PREFIX/etc/npmrc")]),s._v(" (即 npm config get globalconfig 输出的路径)")]),s._v(" "),n("li",[s._v("npm 内置配置文件:"),n("code",[s._v("/path/to/npm/npmrc")])])]),s._v(" "),n("p",[s._v("很多时候我们在公司内网需要通过代理才能访问"),n("code",[s._v("npm")]),s._v("源，通过这个机制，我们可以方便地在工程跟目录创建一个 "),n("code",[s._v(".npmrc")]),s._v(" 文件来共享需要在团队间共享的 "),n("code",[s._v("npm")]),s._v(" 运行相关配置。比如如果我们在公司内网环境下需通过代理才可访问 "),n("code",[s._v("registry.npmjs.org")]),s._v(" 源，或需访问内网的 "),n("code",[s._v("registry")]),s._v(", 就可以在工作项目下新增 "),n("code",[s._v(".npmrc")]),s._v(" 文件并提交代码库。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("proxy = http://proxy.example.com/\nhttps-proxy = http://proxy.example.com/\nregistry = http://registry.example.com/\n")])])]),n("p",[s._v("因为项目级 "),n("code",[s._v(".npmrc")]),s._v(" 文件的作用域只在本项目下，所以在非本目录下，这些配置并不生效。对于使用笔记本工作的开发者，可以很好地隔离公司的工作项目、在家学习研究项目两种不同的环境。")]),s._v(" "),n("p",[s._v("将这个功能与 "),n("code",[s._v("~/.npm-init.js")]),s._v(" 配置相结合，可以将特定配置的 "),n("code",[s._v(".npmrc")]),s._v(" 跟 "),n("code",[s._v(".gitignore")]),s._v(", README 之类文件一起做到 "),n("code",[s._v("npm init")]),s._v(" 脚手架中，进一步减少手动配置。")]),s._v(" "),n("h2",{attrs:{id:"npm-包发布"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-包发布"}},[s._v("#")]),s._v(" npm 包发布")]),s._v(" "),n("h3",{attrs:{id:"规范的-npm-模块目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#规范的-npm-模块目录"}},[s._v("#")]),s._v(" 规范的 npm 模块目录")]),s._v(" "),n("p",[s._v("一个 node.js 模块是基于 CommonJS 模块化规范实现的，严格按照 CommonJS 规范，模块目录下除了必须包含包描述文件 package.json 以外，还需要包含以下目录：")]),s._v(" "),n("ul",[n("li",[s._v("bin：存放可执行二进制文件的目录")]),s._v(" "),n("li",[s._v("lib：存放 js 代码的目录")]),s._v(" "),n("li",[s._v("doc：存放文档的目录")]),s._v(" "),n("li",[s._v("test：存放单元测试用例代码的目录")])]),s._v(" "),n("h3",{attrs:{id:"如何写好一个模块的-readme-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何写好一个模块的-readme-文件"}},[s._v("#")]),s._v(" 如何写好一个模块的 README 文件")]),s._v(" "),n("p",[s._v("这里不单独写，推荐一篇不错的讨论")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("https://www.zhihu.com/question/29100816")])])]),s._v(" "),n("h3",{attrs:{id:"如何发布自己的-npm-包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何发布自己的-npm-包"}},[s._v("#")]),s._v(" 如何发布自己的 npm 包")]),s._v(" "),n("ol",[n("li",[s._v("先去 npm 注册个账号，然后在命令行使用")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" adduser "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据提示输入用户名密码即可")]),s._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("使用命令发布你的包")])]),s._v(" "),n("blockquote",[n("p",[s._v("在推送之前，可以通过配置一个 "),n("code",[s._v(".npmignore")]),s._v(" 文件来排除一些文件, 防止大量的垃圾文件推送到 "),n("code",[s._v("npm")]),s._v(", 规则上和你用的 "),n("code",[s._v(".gitignore")]),s._v(" 是一样的。"),n("code",[s._v(".gitignore")]),s._v(" 文件也可以充当 "),n("code",[s._v(".npmignore")]),s._v(" 文件")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" publish\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v("发布成功之后，你就可以像下载安装其他包一样使用你自己的开发工具了")])]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" koalanpmstudy\n")])])]),n("h4",{attrs:{id:"关于-npm-包的更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于-npm-包的更新"}},[s._v("#")]),s._v(" 关于 npm 包的更新")]),s._v(" "),n("p",[s._v("更新 "),n("code",[s._v("npm")]),s._v(" 包也是使用 "),n("code",[s._v("npm publish")]),s._v(" 命令发布，不过必须更改 "),n("code",[s._v("npm")]),s._v(" 包的版本号，即 "),n("code",[s._v("package.json")]),s._v(" 的 "),n("code",[s._v("version")]),s._v(" 字段，否则会报错，同时我们应该遵 "),n("code",[s._v("Semver")]),s._v("(语义化版本号) "),n("code",[s._v("规范，npm")]),s._v(" 提供了 "),n("code",[s._v("npm version")]),s._v(" 给我们升级版本")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 升级补丁版本号\n$ npm version patch\n\n# 升级小版本号\n$ npm version minor\n\n# 升级大版本号\n$ npm version major\n")])])]),n("h3",{attrs:{id:"本地开发的-npm-包如何调试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本地开发的-npm-包如何调试"}},[s._v("#")]),s._v(" 本地开发的 npm 包如何调试")]),s._v(" "),n("p",[s._v("在本地开发的模块包的时候，可以使用 "),n("code",[s._v("npm link")]),s._v(" 调试，将模块链接到对应的运行项目中去，方便地对模块进行调试和测试。具体使用步骤如下")]),s._v(" "),n("ul",[n("li",[s._v("假如我的项目是 "),n("code",[s._v("koalaNpmStudy，假如我的")]),s._v(" npm 模块包名称是 "),n("code",[s._v("npm-ikoala")])]),s._v(" "),n("li",[s._v("进入到 模块包 "),n("code",[s._v("npm-ikoala")]),s._v(" 目录中，执行 "),n("code",[s._v("npm link")])]),s._v(" "),n("li",[s._v("在自己的项目 "),n("code",[s._v("koalaNpmStudy")]),s._v(" 中创建连接执行 "),n("code",[s._v("npm link npm-ikoala")])]),s._v(" "),n("li",[s._v("在自己项目的 "),n("code",[s._v("node_module")]),s._v(" 中会看到链接过来的模块包，然后就可以像使用其他的模块包一样使用它了。")]),s._v(" "),n("li",[s._v("调试结束后可以使用 "),n("code",[s._v("npm unlink")]),s._v(" 取消关联")])]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("npm link")]),s._v(" 主要做了两件事：")]),s._v(" "),n("ol",[n("li",[s._v("为目标 "),n("code",[s._v("npm")]),s._v(" 模块创建软链接，将其链接到全局 "),n("code",[s._v("node")]),s._v(" 模块安装路径 "),n("code",[s._v("/usr/local/lib/node_modules/")]),s._v("。")]),s._v(" "),n("li",[s._v("为目标 "),n("code",[s._v("npm")]),s._v(" 模块的可执行 "),n("code",[s._v("bin")]),s._v(" 文件创建软链接，将其链接到全局 "),n("code",[s._v("node")]),s._v(" 命令安装路径 "),n("code",[s._v("/usr/local/bin/")]),s._v("。")])])]),s._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/T4ri6wbokY-dzY2dS58QBg",target:"_blank",rel:"noopener noreferrer"}},[s._v("你应该知道的 NPM 知识都在这"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);