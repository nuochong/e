(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{2383:function(t,a,s){"use strict";s.r(a);var h=s(4),e=Object(h.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"为什么推荐使用-hash-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么推荐使用-hash-模式"}},[t._v("#")]),t._v(" 为什么推荐使用 hash 模式？")]),t._v(" "),s("p",[t._v("创建项目时，vue-router 默认使用 hash 模式，设置模式的时候到底该使用 hash 还是 history 模式呢？\n先了解它们的实现原理，搞清楚之间的区别，就知道什么时候该选择什么模式了。")]),t._v(" "),s("h2",{attrs:{id:"一、实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、实现原理"}},[t._v("#")]),t._v(" 一、实现原理")]),t._v(" "),s("h3",{attrs:{id:"hash-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-原理"}},[t._v("#")]),t._v(" hash 原理")]),t._v(" "),s("p",[t._v("hash 通过监听浏览器 onhashchange 事件变化，查找对应路由应用。通过改变 location.hash 改变页面路由。")]),t._v(" "),s("h3",{attrs:{id:"history-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-原理"}},[t._v("#")]),t._v(" history 原理")]),t._v(" "),s("p",[t._v("利用 html5 的 history Interface 中新增的 pushState() 和 replaceState() 方法，改变页面路径。\nhistory Interface 是浏览器历史记录栈提供的接口，可通过 back、forward、go 等，可以读取历览器历史记录栈的信息，pushState、repalceState 还可以对浏览器历史记录栈进行修改。")]),t._v(" "),s("h3",{attrs:{id:"hash-与-history-区别对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-与-history-区别对比"}},[t._v("#")]),t._v(" hash 与 history 区别对比：")]),t._v(" "),s("div",{staticClass:"table-container"},[s("table",{staticClass:"table table-striped",attrs:{id:"table-16"}},[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("hash")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("history")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("有 # 号")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("没有 # 号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("能够兼容到 IE8")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("只能兼容到 IE10")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("实际的 url 之前使用哈希字符，这部分 url 不会发送到服务器，不需要在服务器层面上进行任何处理")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每访问一个页面都需要服务器进行路由匹配生成 html 文件再发送响应给浏览器，消耗服务器大量资源")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("刷新不会存在 404 问题")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("浏览器直接访问嵌套路由时，会报 404 问题。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("不需要服务器任何配置")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("需要在服务器配置一个回调路由")])])])])]),t._v(" "),s("h2",{attrs:{id:"二、为什么推荐使用-hash-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、为什么推荐使用-hash-模式"}},[t._v("#")]),t._v(" 二、为什么推荐使用 hash 模式？")]),t._v(" "),s("p",[t._v("理由：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("从兼容角度分析。")]),t._v(" "),s("ul",[s("li",[t._v("hash 可以兼容到 IE8")]),t._v(" "),s("li",[t._v("而 history 只能兼容到 IE10。")])])]),t._v(" "),s("li",[s("p",[t._v("从网络请求的角度分析。")]),t._v(" "),s("ul",[s("li",[t._v("使用 hash 模式，地址改变时通过 hashchange 事件，只会读取哈希符号后的内容，并不会发起任何网络请求。")]),t._v(" "),s("li",[t._v("而 history 模式，每访问一个页面都要发起网络请求，每个请求都需要服务器进行路由匹配、数据库查询、生成 HTML 文档后再发送响应给浏览器，这个过程会消耗服务器的大量资源，给服务器的压力较大。")])])]),t._v(" "),s("li",[s("p",[t._v("服务器配置角度分析。")]),t._v(" "),s("ul",[s("li",[t._v("hash 不需要服务器任何配置。")]),t._v(" "),s("li",[t._v("history 进行刷新页面时，无法找到 url 对应的页面，会出现 404 问题。因为域名后面的路由是由前端控制的，后端只能保留域名部分，所以就会造成页面丢失的问题，需要服务器端添加一个回退路由，就能解决该问题了。")])])])]),t._v(" "),s("h2",{attrs:{id:"hash-模式不足"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式不足"}},[t._v("#")]),t._v(" hash 模式不足")]),t._v(" "),s("ol",[s("li",[t._v("hash 模式中的 # 也称作锚点，这里的的 # 和 css 中的 # 是一个意思，所以在 hash 模式内，页面定位会失效。")]),t._v(" "),s("li",[t._v("hash 不利于 SEO（搜索引擎优化）。")]),t._v(" "),s("li",[t._v("白屏时间问题。浏览器需要等待 JavaScript 文件加载完成之后渲染 HTML 文档内容，用户等待时间稍长。")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/7037282729485959204",target:"_blank",rel:"noopener noreferrer"}},[t._v("hash 和 history 路由的区别"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);